
1. 配置中心(Nacos)
    1.1 添加dependency
     <dependency>
         <groupId>com.alibaba.cloud</groupId>
         <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
     </dependency>
    1.2 添加bootstrap.properties: /src/main/resources/bootstrap.properties
     spring.application.name=nacos-config-example
     spring.cloud.nacos.config.server-addr=127.0.0.1:8848
    1.3 在nacos配置中心添加一个Data Id (配置管理--->配置列表): gulimall-coupon.properties. 默认规则是"应用名.properties"
    1.4 在nacos配置中心添加任意配置
    1.5 代码中动态获取配置
     @RefreshScope
     class SampleController {

        @Value("${coupon.user.name}")
        String userName;

        @Value("${coupon.user.age}")
        int age;
     }
     1.6 命名空间
        1.6.1 默认预留空间public
        1.6.2 类似dev, qa, prod就行环境区隔, 也可类似order, coupon, product微服务区隔
        1.6.3 bootstrap.properties中: spring.cloud.nacos.config.namespace=54f7df49-15d5-45cb-8bb0-26a787645d82 (命名空间ID)
     1.7 配置集 (配置管理--->配置列表)
     1.8 配置组
        1.8.1 默认default_group
        1.8.2 类似给1111(双11)
        1.8.3 bootstrap.properties中: spring.cloud.nacos.config.group=1111 (组名)
     1.9 最佳组合
        1.9.1 命名空间: 区分每个微服务(order, coupon, member)
        1.9.2 新建配置: Data Id (gulimall-coupon.properties. 默认规则是"应用名.properties")
        1.9.3 配置分组: 区分每个环境(dev, qa, staging, prod)

2. Gateway


3. Rabbit-MQ
    3.1 添加dependency
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>

    3.2 配置文件
        spring.rabbitmq.host=127.0.0.1
        spring.rabbitmq.port=5672
        spring.rabbitmq.virtual-host=/

    3.3 开启
        @EnableRabbit
